"""

    Warehouse program

    functionality:
        -repeated menu
        -register items to a catalog
        1:Register item to catalog
            id (autogenerated)
            title
            category
            price
            stock

        2: List the items of the catalog


        write to a file and load to a file

        3: update the stock manually
            -dislplay list of items
            -ask user to choose id
            -read id
            -tracvel the cataog array and find id match
            -ask for new stock value
            -update stock


"""

from menu import clear, print_menu, print_header
from item import Item
import pickle

# global vars
catalog = [] # called a list in py
data_file= 'warehouse.data'

#function

def save_catalog():
    global data_file
    writer = open(data_file, "wb") # open/create a file in binary
    pickle.dump(catalog, writer)
    writer.close()  #close, release file
    print('####data saved####')

def read_catalog():
    try:
        reader = open(data_file, 'rb') # means read binary
        temp_list = pickle.load(reader)

        for item in temp_list:
            catalog.append(item)

        print('***data loaded***' + str(len(catalog)))

    except:
        print('***error could not read or load data file****')


def register_item():
    print_header('Register new item')
    try:
        title = input('What is the title? ')
        category = input('What is the category? ')
        price = float(input('What is the price? '))
        stock = int(input('How many are in stock? '))

        #create an instance of Item obj

        id = 1
        if(len(catalog) > 0):
            last = catalog[-1]
            id = last.id +1
        new_item = Item(id, title, category, price, stock)
        catalog.append(new_item)

        #new_item.id = 1
        #new_item.title = title
        #new_item.category = category
        #new_item.price = price
        #new_item.stock = stock

    except ValueError:
        print('\n***Verify values***\n')
    except:
        print('***something went wrong***')


def show_items():
    print_header('Items in the Catalog')
    for item in catalog:
        print(str(item.id)
        + ' | ' + item.title.ljust(25)
        + ' | ' + item.category.ljust(10)
        + ' | ' + str(item.price).rjust(15)
        + ' | ' + str(item.stock).rjust(5))
        print('-' * 75)

        
def update_stock():
    show_items()
    input('press enter to continue')
    selectedId = int(input('what is the id'))
    found = False
    for item in catalog:
        if(item.id == selectedId):
            found = True
            new_stock = input('please provide new stock value: ')
            item.stock = int(new_stock)
    if(not found):
        print('Error, selected ID doesnt match any item')

    


#instruction

read_catalog()
input('Please Enter to begin')

opc = ''
while(opc != 'x'):
    clear()
    print_menu()
    opc = input("Please select an option: ")


    if(opc == '1'):
        register_item()
        save_catalog()
    elif(opc == '2'):
        show_items()
    elif(opc == '3'):
        update_stock()
        save_catalog()

    input('Press enter to continue...')
        




    clear()

